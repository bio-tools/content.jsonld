{
  "@context": {
    "bsc": "http://bioschemas.org/",
    "edam": "http://edamontology.org/",
    "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "sc": "http://schema.org/",
    "xsd": "http://www.w3.org/2001/XMLSchema#"
  },
  "@graph": [
    {
      "@id": "https://doi.org/10.1101/751784",
      "@type": "sc:CreativeWork"
    },
    {
      "@id": "https://bio.tools/updog",
      "@type": "sc:SoftwareApplication",
      "sc:applicationSubCategory": [
        {
          "@id": "edam:topic_3518"
        },
        {
          "@id": "edam:topic_3516"
        },
        {
          "@id": "edam:topic_0625"
        }
      ],
      "sc:citation": {
        "@id": "https://doi.org/10.1101/751784"
      },
      "sc:description": "Priors for Genotyping Polyploids | Flexible Genotyping for Polyploids | Implements empirical Bayes approaches to genotype polyploids from next generation sequencing data while accounting for allelic bias, overdispersion, and sequencing error. The main function is flexdog(), which allows the specification of many different genotype distributions. An experimental function that takes into account varying levels of relatedness is implemented in mupdog(). Also provided are functions to simulate genotypes, rgeno(), and read-counts, rflexdog(), as well as functions to calculate oracle genotyping error rates, oracle_mis(), and correlation with the true genotypes, oracle_cor(). These latter two functions are useful for read depth calculations. Run browseVignettes(package = \"updog\") in R for example usage. See Gerard et al. (2018) <doi:10.1534/genetics.118.301468> and Gerard and Ferrao (2019) <doi:10.1101/751784> for details on the implemented methods",
      "sc:featureList": [
        {
          "@id": "edam:operation_3196"
        },
        {
          "@id": "edam:operation_3658"
        }
      ],
      "sc:license": "GPL-3.0",
      "sc:name": "updog",
      "sc:url": "https://cran.r-project.org/package=updog"
    }
  ]
}